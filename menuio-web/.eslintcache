[{"/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/index.js":"1","/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/container/App.js":"2","/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/container/inscription-resto-form-container.js":"3","/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/container/inscription-form-container.js":"4","/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/container/qr-code-page-container.js":"5","/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/container/profil-user-container.js":"6","/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/container/acceuil.js":"7","/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/container/choix-template-container.js":"8","/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/container/menu-container.js":"9","/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/container/connexion-container.js":"10","/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/container/admin-page-categorie.js":"11","/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/container/admin-page-produit.js":"12","/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/container/personnalisation-menu.js":"13","/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/container/page-panier-container.js":"14","/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/container/serveur-container.js":"15","/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/container/accueil-principal.js":"16","/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/container/header-app-container.js":"17","/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/container/modal-categorie-container.js":"18","/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/container/modal-edit-produit-container.js":"19","/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/container/modal-detail-produit-container.js":"20","/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/container/modal-edit-serveur-container.js":"21","/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/component/header-no-connect.js":"22","/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/component/input-component.js":"23","/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/component/loading.js":"24","/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/component/template-elegant-component.js":"25","/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/component/modal-add-produit-component.js":"26","/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/component/modal-set-logo-component.js":"27","/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/component/modal-add-categorie-component.js":"28","/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/component/modal-add-serveur-component.js":"29","/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/component/template-moderne-component.js":"30","/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/component/template-classique-component.js":"31","/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/component/header-menu-component.js":"32"},{"size":171,"mtime":1659241399784,"results":"33","hashOfConfig":"34"},{"size":2230,"mtime":1660180390351,"results":"35","hashOfConfig":"34"},{"size":6002,"mtime":1659803446439,"results":"36","hashOfConfig":"34"},{"size":9761,"mtime":1659420347118,"results":"37","hashOfConfig":"34"},{"size":721,"mtime":1659241399781,"results":"38","hashOfConfig":"34"},{"size":3265,"mtime":1659932614108,"results":"39","hashOfConfig":"34"},{"size":1383,"mtime":1659241399777,"results":"40","hashOfConfig":"34"},{"size":3702,"mtime":1659555547704,"results":"41","hashOfConfig":"34"},{"size":8744,"mtime":1659241399779,"results":"42","hashOfConfig":"34"},{"size":4910,"mtime":1659420228871,"results":"43","hashOfConfig":"34"},{"size":7816,"mtime":1659241399777,"results":"44","hashOfConfig":"34"},{"size":11423,"mtime":1659241399777,"results":"45","hashOfConfig":"34"},{"size":17022,"mtime":1659241399780,"results":"46","hashOfConfig":"34"},{"size":2956,"mtime":1659241399780,"results":"47","hashOfConfig":"34"},{"size":10289,"mtime":1659241399781,"results":"48","hashOfConfig":"34"},{"size":4252,"mtime":1659568416068,"results":"49","hashOfConfig":"34"},{"size":3100,"mtime":1659241399778,"results":"50","hashOfConfig":"34"},{"size":2355,"mtime":1659241399779,"results":"51","hashOfConfig":"34"},{"size":6989,"mtime":1659241399779,"results":"52","hashOfConfig":"34"},{"size":3408,"mtime":1659241399779,"results":"53","hashOfConfig":"34"},{"size":6028,"mtime":1659932875673,"results":"54","hashOfConfig":"34"},{"size":575,"mtime":1659553611816,"results":"55","hashOfConfig":"34"},{"size":392,"mtime":1659412421968,"results":"56","hashOfConfig":"34"},{"size":311,"mtime":1659241399774,"results":"57","hashOfConfig":"34"},{"size":2056,"mtime":1659241399775,"results":"58","hashOfConfig":"34"},{"size":3506,"mtime":1659241399774,"results":"59","hashOfConfig":"34"},{"size":1738,"mtime":1659241399775,"results":"60","hashOfConfig":"34"},{"size":1677,"mtime":1659241399774,"results":"61","hashOfConfig":"34"},{"size":4669,"mtime":1659241399775,"results":"62","hashOfConfig":"34"},{"size":2301,"mtime":1659241399776,"results":"63","hashOfConfig":"34"},{"size":2137,"mtime":1659241399775,"results":"64","hashOfConfig":"34"},{"size":411,"mtime":1659241399773,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"cl7bja",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/index.js",[],["134","135"],"/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/container/App.js",[],"/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/container/inscription-resto-form-container.js",[],"/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/container/inscription-form-container.js",[],"/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/container/qr-code-page-container.js",[],"/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/container/profil-user-container.js",[],"/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/container/acceuil.js",[],"/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/container/choix-template-container.js",[],"/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/container/menu-container.js",[],"/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/container/connexion-container.js",[],"/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/container/admin-page-categorie.js",["136"],"import React, { Component } from 'react'\nimport HeaderAppContainer from '../container/header-app-container'\nimport ModalCategorie from '../container/modal-categorie-container'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport '../css/pageCategorie.css'\nimport ModalAddCatgorie from '../component/modal-add-categorie-component'\nconst baseUrl = 'https://menuio.herokuapp.com'\n//const proxyurl = 'https://cors-anywhere.herokuapp.com/'\nconst proxyurl = ''\n\nclass PageCategorieContainer extends Component {\n    constructor () {\n        super()\n        this.state = {\n            categories: [],\n            idCategorieSelected: '',\n            idResto: localStorage.getItem('idResto'),\n            requiredItem: 0,\n            idMenu: localStorage.getItem('idMenu'),\n            nomCategorieToAdd: '',\n            errorDelete: '',\n            idCategorieTodelete: -1\n        }\n        this.replaceModalItem = this.replaceModalItem.bind(this)\n        this.saveModalDetails = this.saveModalDetails.bind(this)\n        this.handleChangeCategorie = this.handleChangeCategorie.bind(this)\n        this.handleClickAddCategorie = this.handleClickAddCategorie.bind(this)\n        this.handleDeleteCategorie = this.handleDeleteCategorie.bind(this)\n    }\n\n    componentDidMount () {\n        this.getListCategorie()\n    }\n\n    getListCategorie () {\n        fetch(proxyurl + baseUrl + '/categoriesByResto/' + this.state.idResto)\n            .then((response) => {\n                return response.json()\n            })\n            .then((result) => {\n                this.setState({ categories: result })\n                console.log(result)\n            })\n    }\n\n    replaceModalItem (index) {\n        this.setState({\n            requiredItem: index,\n            idCategorieSelected: this.state.categories[index].id\n        })\n    }\n\n    saveModalDetails (item) {\n        const requestOptions = {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ nom: item.nom, idMenu: this.state.idMenu })\n        }\n\n        fetch(proxyurl + baseUrl + '/categorie/' + this.state.idCategorieSelected, requestOptions)\n            .then((response) => {\n                response.json()\n            })\n            .then((result) => {\n                // console.log(result)\n                this.getListCategorie()\n            })\n        console.log(this.state.idCategorieSelected)\n    }\n\n    handleClickAddCategorie () {\n        // console.log(JSON.stringify({ nom: this.state.nomCategorieToAdd, idMenu: this.state.idMenu }))\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ nom: this.state.nomCategorieToAdd, idMenu: this.state.idMenu })\n        }\n\n        fetch(proxyurl + baseUrl + '/categorie', requestOptions)\n            .then((response) => {\n                response.json()\n            })\n            .then((result) => {\n                this.getListCategorie()\n            })\n    }\n\n    handleChangeCategorie (event) {\n        this.setState({ nomCategorieToAdd: event.target.value })\n    }\n\n    handleChangeDeleteCat (idCategorie, i) {\n        this.setState({ idCategorieTodelete: idCategorie })\n    }\n\n    handleDeleteCategorie () {\n        const requestOptions = {\n            method: 'DELETE',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            }\n        }\n\n        fetch(proxyurl + baseUrl + '/categorie/' + this.state.idCategorieTodelete + '/' + this.state.idResto, requestOptions)\n            .then((response) => {\n                if (response.status === 401) {\n                    this.setState({ errorDelete: 'Vous ne pouvez pas supprimer cette catégorie car elle contient des produits !' })\n                    // throw new Error(response.statusText)\n                }\n                return response.json()\n            })\n            .then((result) => {\n                this.setState({ categories: result })\n            })\n    }\n\n    render () {\n        const requiredItem = this.state.requiredItem\n        const modalData = this.state.categories[requiredItem]\n        let nom\n        modalData === undefined ? nom = '' : nom = modalData.nom\n        // console.log(modalData)\n        return (\n            <div>\n                <HeaderAppContainer />\n                <div>\n                    <div className='text-center'>\n                        <h1>Liste des categories</h1>\n                    </div>\n                    <div>\n                        <button type='button' className='btnAdd' data-toggle='modal' data-target='#modalAdd'>+</button>\n                        <table className=' w-75 table table-striped'>\n                            <thead className='thead-dark'>\n                                <tr>\n                                    <th scope='col'>Editer</th>\n                                    <th scope='col'>Nom de la categorie</th>\n                                    <th scope='col'>Supprimer</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {this.state.categories.map((categorie, i) =>\n                                    <tr key={i}>\n                                        <td><button type='button' className='btn btn-info btn-rounded btn-sm my-0' data-toggle='modal' data-target='#modalEdit' onClick={() => this.replaceModalItem(i)}>Editer</button></td>\n                                        <td>{categorie.nom}</td>\n                                        <td><button type='button' className='btn btn-danger btn-rounded btn-sm my-0' data-toggle='modal' data-target='#confirm-delete' onClick={() => this.handleChangeDeleteCat(categorie.id, i)}>Supprimer</button></td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </table>\n                        <ModalCategorie\n                            nom={nom}\n                            saveModalDetails={this.saveModalDetails}\n                        />\n                        <ModalAddCatgorie\n                            onChangeNom={this.handleChangeCategorie}\n                            onClickEnregistrer={this.handleClickAddCategorie}\n                        />\n                        <span>{this.state.errorDelete}</span>\n\n                        <div className='modal fade' id='confirm-delete' tabIndex='-1' role='dialog' aria-labelledby='myModalLabel' aria-hidden='true'>\n                            <div className='modal-dialog'>\n                                <div className='modal-content'>\n                                    <div className='modal-header'>\n                                        Confirmation de suppression\n                                    </div>\n                                    <div className='modal-body'>\n                                        Êtes-vous sûre de vouloir supprimer cette catégorie ?\n                                    </div>\n                                    <div className='modal-footer'>\n                                        <button type='button' className='btn btn-default' data-dismiss='modal'>Annuler</button>\n                                        <a className='btn btn-danger btn-ok' data-dismiss='modal' onClick={this.handleDeleteCategorie}>Supprimer</a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PageCategorieContainer\n","/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/container/admin-page-produit.js",["137"],"import React, { Component } from 'react'\nimport HeaderAppContainer from '../container/header-app-container'\nimport '../css/pageCategorie.css'\nimport ModalEditProduitContainer from '../container/modal-edit-produit-container'\nimport ModalAddProduit from '../component/modal-add-produit-component'\nconst baseUrl = 'https://menuio.herokuapp.com'\n//const proxyurl = 'https://cors-anywhere.herokuapp.com/'\nconst proxyurl = ''\n\nclass PageProduitContainer extends Component {\n    constructor () {\n        super()\n        this.state = {\n            produits: [],\n            requiredItem: 0,\n            valuesAddForm: {},\n            idMenu: null,\n            categories: [],\n            idResto: localStorage.getItem('idResto'),\n            idProduitToDelete: -1,\n            selectedImageProduit: null,\n            urlSelectedImageProduit: ''\n        }\n        this.replaceModalItem = this.replaceModalItem.bind(this)\n        this.saveModalDetails = this.saveModalDetails.bind(this)\n        this.handleChangeAddForm = this.handleChangeAddForm.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleDeleteProduit = this.handleDeleteProduit.bind(this)\n        this.handleChangeImage = this.handleChangeImage.bind(this)\n    }\n\n    componentDidMount () {\n        // this.getListProduit()\n        Promise.all([\n            fetch(proxyurl + baseUrl + '/categoriesByResto/' + this.state.idResto),\n            fetch(proxyurl + baseUrl + '/produits-by-resto/' + this.state.idResto)\n\n        ])\n            .then(([response1, response2]) => Promise.all([response1.json(), response2.json()]))\n            .then(([categories, produits]) => this.setState({\n                categories: categories,\n                idMenu: categories[0].idMenu,\n                produits: produits\n            }))\n    }\n\n    replaceModalItem (index) {\n        this.setState({\n            requiredItem: index\n        })\n    }\n\n    getListProduit () {\n        fetch(proxyurl + baseUrl + '/produits-by-resto/' + this.state.idResto)\n            .then((response) => {\n                return response.json()\n            })\n            .then((result) => {\n                this.setState({ produits: result })\n            })\n    }\n\n    saveModalDetails (item) {\n        const requestOptions = {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ nom: item.nom, description: item.description, prix: item.prix, url_image: item.url_image.name, idCategorie: Number(item.id_categorie) })\n        }\n\n        // console.log(JSON.stringify({ nom: item.nom, description: item.description, prix: item.prix, url_image: item.url_image.name, idCategorie: Number(item.id_categorie) }))\n        fetch(proxyurl + baseUrl + '/produit/' + item.id, requestOptions)\n            .then((response) => {\n                return response.json()\n            })\n            .then((result) => {\n                this.getListProduit()\n            })\n    }\n\n    handleChangeAddForm (e) {\n        this.setState({\n            valuesAddForm: Object.assign(this.state.valuesAddForm, { [e.target.name]: e.target.value })\n        })\n    }\n\n    handleDeleteProduit () {\n        this.setState({})\n        const requestOptions = {\n            method: 'DELETE',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            }\n        }\n\n        fetch(proxyurl + baseUrl + '/produits/' + this.state.idProduitToDelete + '/' + this.state.idResto, requestOptions)\n            .then((response) => {\n                return response.json()\n            })\n            .then((result) => {\n                // this.getListProduit()\n                this.setState({ produits: result })\n            })\n    }\n\n    handleChangeImage (e) {\n        this.setState({ selectedImageProduit: e.target.files[0] })\n    }\n\n    handleSubmit (e) {\n        e.preventDefault()\n        const valuesAddForm = this.state.valuesAddForm\n        const idMenu = this.state.idMenu\n        const formData = new FormData()\n\n        const requestOptionsAddProduit = {\n            method: 'POST',\n            headers: {\n                'Access-Control-Allow-Origin': '*',\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ nom: valuesAddForm.nom, description: valuesAddForm.description, prix: Number(valuesAddForm.prix), idCategorie: Number(valuesAddForm.idCategorie), idMenu: Number(idMenu) })\n        }\n        if (this.state.selectedImageProduit !== null) {\n            formData.append(\n                'file',\n                this.state.selectedImageProduit,\n                this.state.selectedImageProduit.name\n            )\n\n            const requestOptionsUploadImage = {\n                method: 'POST',\n                headers: {\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods' : 'PUT, GET, POST, DELETE',\n                    'Access-Control-Allow-Headers' : 'Origin, X-Requested-With, Content-Type, Accept',\n                    'Content-Type': 'multipart/form-data'\n                },\n                body: formData\n            }\n\n            fetch(proxyurl + baseUrl + '/storage/uploadFile', requestOptionsUploadImage)\n                .then((response) => {\n                    return response.text()\n                }).then((data) => {\n                    fetch(proxyurl + baseUrl + '/ajout/produit/' + this.state.idResto, {\n                        method: 'POST',\n                        headers: {\n                            'Access-Control-Allow-Origin': '*',\n                            Accept: 'application/json',\n                            'Content-Type': 'application/json',\n                            \n                        },\n                        body: JSON.stringify({ nom: valuesAddForm.nom, description: valuesAddForm.description, prix: Number(valuesAddForm.prix), idCategorie: Number(valuesAddForm.idCategorie), idMenu: Number(idMenu), url_image: data })\n                    }\n                    )\n                        .then((response2) => {\n                            return response2.json()\n                        }).then((data2) => {\n                            this.setState({ produits: data2 })\n                        }).catch((error) => {\n                            console.log(error)\n                        })\n                })\n        } else {\n            fetch(proxyurl + baseUrl + '/ajout/produit/' + this.state.idResto, requestOptionsAddProduit)\n                .then((response) => {\n                    return response.json()\n                })\n                .then((result) => {\n                    this.setState({ produits: result })\n                })\n        }\n    }\n\n    handleChangeDelete (idProduit, i) {\n        this.setState({ idProduitToDelete: idProduit })\n    }\n\n    render () {\n        const requiredItem = this.state.requiredItem\n        const modalData = this.state.produits[requiredItem]\n\n        return (\n            <div>\n                <HeaderAppContainer />\n                <div className='text-center'>\n                    <h1>Liste des produits</h1>\n                </div>\n                <div>\n                    <button type='button' className='btnAdd' data-toggle='modal' data-target='#modalAddProduit'>+</button>\n                    <table className=' w-75 table table-striped'>\n                        <thead className='thead-dark'>\n                            <tr>\n                                <th scope='col'>Editer</th>\n                                <th scope='col'>Image</th>\n                                <th scope='col'>Nom</th>\n                                <th scope='col'>Description</th>\n                                <th scope='col'>Prix</th>\n                                <th scope='col'>Categorie</th>\n                                <th scope='col'>Supprimer</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.state.produits.map((produit, i) =>\n                                <tr key={i}>\n                                    <td><button type='button' className='btn btn-info btn-rounded btn-sm my-0' data-toggle='modal' data-target='#modalEditProduit' onClick={() => this.replaceModalItem(i)}>Editer</button></td>\n                                    <td><img src={'https://aissatabucket.s3.amazonaws.com/' + produit.url_image} alt={'image de ' + produit.nom} /></td>\n                                    <td>{produit.nom}</td>\n                                    <td>{produit.description}</td>\n                                    <td>{produit.prix}</td>\n                                    <td value={produit.id_categorie}>{produit.nom_categorie}</td>\n                                    <td><button type='button' className='btn btn-danger btn-rounded btn-sm my-0' data-toggle='modal' data-target='#confirm-delete' onClick={() => this.handleChangeDelete(produit.id, i)}>Supprimer</button></td>\n                                </tr>\n                            )}\n                        </tbody>\n\n                    </table>\n                    <ModalEditProduitContainer\n                        id={modalData === undefined ? '' : modalData.id}\n                        nom={modalData === undefined ? '' : modalData.nom}\n                        description={modalData === undefined ? '' : modalData.description}\n                        prix={modalData === undefined ? '' : modalData.prix}\n                        categorie={modalData === undefined ? '' : modalData.nom_categorie}\n                        id_categorie={modalData === undefined ? '' : modalData.id_categorie}\n                        url_image={modalData === undefined ? '' : modalData.url_image}\n                        saveModalDetails={this.saveModalDetails}\n                    />\n\n                    <ModalAddProduit\n                        categories={this.state.categories}\n                        onChange={this.handleChangeAddForm}\n                        onClickEnregistrer={this.handleSubmit}\n                        onChangeImage={this.handleChangeImage}\n                    />\n                    <div className='modal fade' id='confirm-delete' tabIndex='-1' role='dialog' aria-labelledby='myModalLabel' aria-hidden='true'>\n                        <div className='modal-dialog'>\n                            <div className='modal-content'>\n                                <div className='modal-header'>\n                                    Confirmation de suppression\n                                </div>\n                                <div className='modal-body'>\n                                    Êtes-vous sûre de vouloir supprimer cette catégorie ?\n                                </div>\n                                <div className='modal-footer'>\n                                    <button type='button' className='btn btn-default' data-dismiss='modal'>Annuler</button>\n                                    <a className='btn btn-danger btn-ok' data-dismiss='modal' onClick={this.handleDeleteProduit}>Supprimer</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default PageProduitContainer\n","/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/container/personnalisation-menu.js",[],"/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/container/page-panier-container.js",[],"/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/container/serveur-container.js",["138"],"/* eslint-disable react/jsx-closing-tag-location */\nimport React, { Component } from 'react'\nimport HeaderAppContainer from '../container/header-app-container'\nimport ModalAddServeur from '../component/modal-add-serveur-component'\nimport ModalEditServeur from '../container/modal-edit-serveur-container'\nimport '../css/serveur.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nconst baseUrl = 'https://menuio.herokuapp.com'\n//const proxyurl = 'https://cors-anywhere.herokuapp.com/'\nconst proxyurl = ''\n\nclass ServeurContainer extends Component {\n    constructor (props) {\n        super(props)\n        this.state = {\n            idResto: localStorage.getItem('idResto'),\n            serveurs: [],\n            valuesForm: {},\n            errors: {},\n            idServeurToDelete: null,\n            isUpdate: false,\n            requiredItem: 0\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleDeleteServeur = this.handleDeleteServeur.bind(this)\n        this.saveModalDetails = this.saveModalDetails.bind(this)\n    }\n\n    // Tous les serveurs à partir de IdResto\n    componentDidMount () {\n        this.getListServeur()\n    }\n\n    getListServeur () {\n        fetch(proxyurl + baseUrl + '/serveur/' + this.state.idResto)\n            .then((response) => {\n                return response.json()\n            })\n            .then((result) => {\n                this.setState({ serveurs: result })\n                // console.log(this.state.serveurs)\n            })\n    }\n\n    handleChange (event) {\n        this.setState({\n            valuesForm: Object.assign(this.state.valuesForm, { [event.target.name]: event.target.value })\n        })\n    }\n\n    handleSubmit (event) {\n        event.preventDefault()\n\n        if (this.validationForm()) {\n            const valuesForm = this.state.valuesForm\n            const date = new Date()\n            date.toLocaleDateString()\n            const dataToSend = { nom: valuesForm.nom, prenom: valuesForm.prenom, email: valuesForm.email, telephone: Number(valuesForm.telephone), addresse: valuesForm.addresse, passwords: valuesForm.passwords, date_enregistrement: date, idrestaurant: Number(this.state.idResto) }\n\n            const requestOptionsForm = {\n                method: 'POST',\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json'\n\n                },\n                body: JSON.stringify(dataToSend)\n            }\n\n            fetch(proxyurl + baseUrl + '/ajout/serveur/' + this.state.idResto, requestOptionsForm)\n                .then((response) => {\n                    return response.json()\n                })\n                .then((data) => {\n                    this.setState({ serveurs: data })\n                })\n        }\n    }\n\n    validationForm () {\n        const valuesForm = this.state.valuesForm\n        const errors = {}\n        let isValidForm = true\n\n        if (valuesForm.password2 !== valuesForm.passwords) {\n            isValidForm = false\n            errors.password2 = 'Les mot de passe doivent être identiques'\n        }\n\n        if (typeof valuesForm.telephone !== 'undefined') {\n            if (!valuesForm.telephone.match(/^[0-9]{10}/)) {\n                isValidForm = false\n                errors.telephone = 'Cet champs doit contenir 10 chiffres'\n            }\n        }\n\n        this.setState({ errors: errors })\n        return isValidForm\n    }\n\n    replaceModalItem (index) {\n        this.setState({\n            requiredItem: index\n        })\n    }\n\n    handleChangeDelete (idServeurToDelete, i) {\n        this.setState({ idServeurToDelete: idServeurToDelete })\n    }\n\n    handleDeleteServeur () {\n        const requestOptions = {\n            method: 'DELETE',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            }\n        }\n\n        fetch(proxyurl + baseUrl + '/serveur/' + this.state.idServeurToDelete + '/' + this.state.idResto, requestOptions)\n            .then((response) => {\n                return response.json()\n            })\n            .then((result) => {\n                // this.getListServeur()\n                this.setState({ serveurs: result })\n            })\n    }\n\n    saveModalDetails (item, event) {\n        event.preventDefault()\n        const requestOptions = {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ nom: item.nom, prenom: item.prenom, email: item.email, telephone: Number(item.telephone), addresse: item.addresse, passwords: item.passwords })\n        }\n\n        fetch(proxyurl + baseUrl + '/serveur/' + item.id, requestOptions)\n            .then((response) => {\n                response.json()\n            })\n            .then((result) => {\n                this.getListServeur()\n            })\n    }\n\n    render () {\n        const requiredItem = this.state.requiredItem\n        const modalData = this.state.serveurs[requiredItem]\n        return (\n            <div>\n                <HeaderAppContainer />\n\n                {this.state.serveurs.length === 0\n\n                    ? <div className='text-center'>\n                        <h1>Nous n'avons aucun serveur enregistré pour le moment ! </h1>\n                        <button type='button' data-toggle='modal' data-target='#modalAddServeur'>Ajouter un serveur</button>\n                    </div>\n\n                    : <div className='mx-5 pt-2'>\n                        <div className='text-center'>\n                            <h1>Liste des serveurs</h1>\n                        </div>\n\n                        <button type='button' className='btnAdd' data-toggle='modal' data-target='#modalAddServeur'>+</button>\n                        <table className='table table-striped'>\n                            <thead className='thead-dark'>\n                                <tr>\n                                    <th> </th>\n                                    <th scope='col'>Nom</th>\n                                    <th scope='col'>Prenom</th>\n                                    <th scope='col'>Email</th>\n                                    <th scope='col'>Téléphone</th>\n                                    <th scope='col'>Addresse</th>\n                                    <th scope='col'>Date d'enregistrement</th>\n                                    <th scope='col'>Code</th>\n                                    <th> </th>\n\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {this.state.serveurs.map((serveur, i) =>\n                                    <tr key={i}>\n                                        <td><button type='button' className='btn btn-info btn-rounded btn-sm my-0' data-toggle='modal' data-target='#modalEditServeur' onClick={() => this.replaceModalItem(i)}>Editer</button></td>\n                                        <td>{serveur.nom}</td>\n                                        <td>{serveur.prenom}</td>\n                                        <td>{serveur.email}</td>\n                                        <td>{serveur.telephone}</td>\n                                        <td>{serveur.addresse}</td>\n                                        <td>{new Date(serveur.date_enregistrement).getDay() + '-' + (new Date(serveur.date_enregistrement).getMonth() + 1) + '-' + new Date(serveur.date_enregistrement).getFullYear()}</td>\n                                        <td>{serveur.passwords}</td>\n                                        <td><button type='button' className='btn btn-danger btn-rounded btn-sm my-0' data-toggle='modal' data-target='#confirm-delete' onClick={() => this.handleChangeDelete(serveur.id, i)}>Supprimer</button></td>\n                                    </tr>\n                                )}\n                            </tbody>\n\n                        </table>\n                    </div>}\n\n                <div>\n\n                    <ModalAddServeur\n                        onChange={this.handleChange}\n                        onClickEnregistrer={this.handleSubmit}\n                        errorMdp={this.state.errors.password2}\n                        errorTel={this.state.errors.telephone}\n                        dataDissmissAdd={this.state.dataDissmissAdd}\n                    />\n\n                    <ModalEditServeur\n                        id={modalData === undefined ? '' : modalData.id}\n                        nom={modalData === undefined ? '' : modalData.nom}\n                        prenom={modalData === undefined ? '' : modalData.prenom}\n                        email={modalData === undefined ? '' : modalData.email}\n                        telephone={modalData === undefined ? '' : modalData.telephone}\n                        addresse={modalData === undefined ? '' : modalData.addresse}\n                        passwords={modalData === undefined ? '' : modalData.passwords}\n                        saveModalDetails={this.saveModalDetails}\n                    />\n\n                    <div className='modal fade' id='confirm-delete' tabIndex='-1' role='dialog' aria-labelledby='myModalLabel' aria-hidden='true'>\n                        <div className='modal-dialog'>\n                            <div className='modal-content'>\n                                <div className='modal-header'>\n                                    Confirmation de suppression\n                                </div>\n                                <div className='modal-body'>\n                                    Êtes-vous sûre de vouloir supprimer cet serveur ?\n                                </div>\n                                <div className='modal-footer'>\n                                    <button type='button' className='btn btn-default' data-dismiss='modal'>Annuler</button>\n                                    <a className='btn btn-danger btn-ok' onClick={this.handleDeleteServeur} data-dismiss='modal'>Supprimer</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default ServeurContainer\n","/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/container/accueil-principal.js",[],"/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/container/header-app-container.js",[],"/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/container/modal-categorie-container.js",[],"/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/container/modal-edit-produit-container.js",[],"/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/container/modal-detail-produit-container.js",[],"/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/container/modal-edit-serveur-container.js",[],"/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/component/header-no-connect.js",[],"/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/component/input-component.js",[],"/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/component/loading.js",[],"/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/component/template-elegant-component.js",[],"/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/component/modal-add-produit-component.js",[],"/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/component/modal-set-logo-component.js",[],"/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/component/modal-add-categorie-component.js",[],"/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/component/modal-add-serveur-component.js",[],"/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/component/template-moderne-component.js",[],"/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/component/template-classique-component.js",[],"/Users/aissata/Documents/Dev/Menu.io/React-js-menuio/menuio-web/src/component/header-menu-component.js",[],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":175,"column":41,"nodeType":"145","endLine":175,"endColumn":136},{"ruleId":"143","severity":1,"message":"144","line":248,"column":37,"nodeType":"145","endLine":248,"endColumn":130},{"ruleId":"143","severity":1,"message":"144","line":235,"column":37,"nodeType":"145","endLine":235,"endColumn":130},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]